/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testeditor.Forms;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import testeditor.Classes.DebugClient;
import testeditor.Classes.Server;
import testeditor.Classes.Test;
import testeditor.Classes.questionBank;

/**
 *
 * @author admin
 */
public class StartWindow extends javax.swing.JFrame {

    /**
     * Creates new form StartWindow
     */
    Test test;
    Server server;
    boolean adminRights;
    String currentUser;
    public StartWindow() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jTextField1.setText("");
        jCheckBox1.setText("Навчальний тест");
        jLabel2.setText("Кількість питань");
        jButton1.setText("Відкрити");
        jButton2.setText("Запустити тест");
        jButton3.setText("DEBUG");
        jButton4.setText("Зупинити сервер");
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel2.setEnabled(false);
        jSpinner1.setEnabled(false);
        jLabel6.setVisible(false);
        jButton3.setVisible(false);
        UIManager.put("FileChooser.openButtonText","Відкрити");
        UIManager.put("FileChooser.cancelButtonText","Відмінити");
        UIManager.put("FileChooser.openDialogTitleText","Виберіть файл");
        UIManager.put("FileChooser.fileNameLabelText","Назва");
        UIManager.put("FileChooser.filesOfTypeLabelText","Тип");
        UIManager.put("FileChooser.lookInLabelText","Папка");
        
        UIManager.put("OptionPane.okButtonText","Увійти");
        UIManager.put("OptionPane.cancelButtonText","Вийти");
        adminRights=false;

        /*
        //questionBank DEBUG
        try
        {
            questionBank qbtest;
            FileInputStream fis = new FileInputStream("questionBank.qb");
            ObjectInputStream is = new ObjectInputStream(fis);
            qbtest=(questionBank)is.readObject();
            ArrayList<Question> arr = qbtest.getQuestions();
            System.out.println(arr.size());
            for(int i=0;i<arr.size();i++)System.out.println(arr.get(i).getText());
        }catch(Exception ex)
        {
            if(ex.getClass()==FileNotFoundException.class)System.out.println("File Bolzhedor!");
            else if(ex.getClass()==IOException.class)System.out.println("IO Bolzhedor!");
            else if(ex.getClass()==ClassNotFoundException.class)System.out.println("Class Bolzhedor!");
            else System.out.println(ex.getClass());
        }
        */       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Тест");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        jCheckBox1.setText("jCheckBox1");

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jMenu1.setText("Файл");

        jMenuItem4.setText("Відкрити редактор");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem1.setText("Комбіновані тести");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Про програму");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setText("Закрити");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Користувачі");

        jMenuItem5.setText("Додати користувача");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem7.setText("Змінити пароль користувача");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem6.setText("Видалити користувача");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem8.setText("Змінити користувача");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 64, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton4))
                    .addComponent(jButton3))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        MainWindow form=new MainWindow();
        form.setTitle("Редактор тестів");
        form.show();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser=new JFileChooser("/");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Tests", "tst");
        chooser.setFileFilter(filter);
        int returnVal=chooser.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            String filename=chooser.getSelectedFile().getAbsolutePath();           
            try
            {
                FileInputStream fis = new FileInputStream(filename);
                ObjectInputStream is = new ObjectInputStream(fis);
                test=(Test)is.readObject();
                jTextField1.setText(test.getName());
                jLabel3.setText("Предмет:");
                jLabel4.setText("Час на питання:");
                jLabel5.setText(test.getSubject());
                jLabel6.setText(String.valueOf(test.getTime()));
                
                jLabel3.setVisible(true);
                jLabel4.setVisible(true);
                jLabel5.setVisible(true);
                jLabel6.setVisible(true);
                jLabel2.setEnabled(true);
                jSpinner1.setEnabled(true);
                SpinnerModel model=new SpinnerNumberModel(test.getQuestions().size(),1,test.getQuestions().size(),1);
                jSpinner1.setModel(model);
            }catch (ClassNotFoundException e){} catch (IOException ex) {}
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Test toSendTest=new Test(Integer.valueOf(jSpinner1.getValue().toString()),test);
        if(jCheckBox1.isSelected()) toSendTest.setTraining(true);
        else toSendTest.setTraining(false);
        server=new Server(toSendTest);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         DebugClient client=new DebugClient();        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        server.stopServer();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        comboTestEditor form=new comboTestEditor();
        form.setTitle("Редактор комбінованих тестів");
        form.show();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JOptionPane.showMessageDialog(null, "Програма для визначення кваліфікації програміста\nРозробили:\nКудрявцев Віктор\nКучмій Олександр\nБіловол Андрій(можливо)\nПР-141","Про програму", 1);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        JTextField loginField = new JTextField(15);
        JPasswordField passField = new JPasswordField(15);
        

        JPanel myPanel = new JPanel();
        JPanel labels = new JPanel(new GridLayout(0,1,2,10));
        JPanel inputs = new JPanel(new GridLayout(0,1,2,2));
        
        labels.add(new JLabel("Логін:",SwingConstants.RIGHT));
        labels.add(new JLabel("Пароль:",SwingConstants.RIGHT));
        myPanel.add(labels, BorderLayout.WEST);

        
        inputs.add(loginField);
        inputs.add(passField);
        myPanel.add(inputs,BorderLayout.CENTER);
        
        boolean itr=true;
        Map<String,String> users=new Hashtable<>();
        try 
        {
            FileInputStream fis = new FileInputStream("users");
            ObjectInputStream is = new ObjectInputStream(fis);
            users=(Hashtable<String,String>)is.readObject();
            is.close();
            fis.close();
        } 
        catch (FileNotFoundException e) 
        {
            users.put("admin", "xpk2017");
            try 
            {
                FileOutputStream fos;
                fos=new FileOutputStream("users");
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(users);
                oos.close();
                fos.close();
            } 
            catch (FileNotFoundException a) {}
            catch(IOException a){}  
        }
        catch(IOException e){}
        catch(ClassNotFoundException e){}
        String login,password;
                
        while(itr)
        {
            int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Вхід", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) 
            {
                login=loginField.getText();
                password=passField.getText();
                if(users.get(login) == null ? password == null : users.get(login).equals(password))
                {
                    itr=false;
                    currentUser=login;
                    if("admin".equals(login)) adminRights=true;
                }
            }
            else{System.exit(0);}
        }        
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

        
        UIManager.put("OptionPane.okButtonText","Створити");
        UIManager.put("OptionPane.cancelButtonText","Відмінити");
        
        JTextField loginField = new JTextField(15);
        JPasswordField passField = new JPasswordField(15);
        JPasswordField confirmField = new JPasswordField(15);  
        
        JPanel myPanel = new JPanel();
        JPanel labels = new JPanel(new GridLayout(0,1,2,11));
        JPanel inputs = new JPanel(new GridLayout(0,1,2,2));
        
        labels.add(new JLabel("Логін:",SwingConstants.RIGHT));
        labels.add(new JLabel("Пароль:",SwingConstants.RIGHT));
        labels.add(new JLabel("Підтвердіть пароль:",SwingConstants.RIGHT));
        myPanel.add(labels, BorderLayout.WEST);

               
        inputs.add(loginField);
        inputs.add(passField);
        inputs.add(confirmField);
        myPanel.add(inputs,BorderLayout.CENTER);

        
        Map<String,String> users=new Hashtable<>();
        try 
        {
            FileInputStream fis = new FileInputStream("users");
            ObjectInputStream is = new ObjectInputStream(fis);
            users=(Hashtable<String,String>)is.readObject();
            is.close();
            fis.close();
        } 
        catch (FileNotFoundException e){}
        catch(IOException e){}
        catch(ClassNotFoundException e){}
        
        int result = JOptionPane.showConfirmDialog(null, myPanel, 
           "Створити нового користувача", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) 
        {
            if(passField.getText() == null ? confirmField.getText() == null : passField.getText().equals(confirmField.getText()))
            {
                if(adminRights)
                {
                    users.put(loginField.getText(), passField.getText());
                    try 
                    {
                        FileOutputStream fos;
                        fos=new FileOutputStream("users");
                        ObjectOutputStream oos = new ObjectOutputStream(fos);
                        oos.writeObject(users);
                        oos.close();
                        fos.close();
                    } 
                    catch (FileNotFoundException a) {}
                    catch(IOException a){}
                }
                else
                {
                    UIManager.put("OptionPane.okButtonText","OK");
                    JOptionPane.showMessageDialog(null, "Відмовлено");
                    return;
                }
            }
            else JOptionPane.showMessageDialog(null, "Паролі не співпадають!");
        }
        
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        UIManager.put("OptionPane.okButtonText","Змінити");
        UIManager.put("OptionPane.cancelButtonText","Відмінити");
        
        JTextField loginField = new JTextField(15);
        JPasswordField oldPassField = new JPasswordField(15);
        JPasswordField newPassField = new JPasswordField(15);
        
        JPanel myPanel = new JPanel();
        JPanel labels = new JPanel(new GridLayout(0,1,2,11));
        JPanel inputs = new JPanel(new GridLayout(0,1,2,2));
        
        labels.add(new JLabel("Логін:",SwingConstants.RIGHT));
        labels.add(new JLabel("Старий пароль:",SwingConstants.RIGHT));
        labels.add(new JLabel("Новий пароль:",SwingConstants.RIGHT));
        myPanel.add(labels, BorderLayout.WEST);

                
        inputs.add(loginField);
        inputs.add(oldPassField);
        inputs.add(newPassField);
        myPanel.add(inputs,BorderLayout.CENTER);
       
        Map<String,String> users=new Hashtable<>();
        try 
        {
            FileInputStream fis = new FileInputStream("users");
            ObjectInputStream is = new ObjectInputStream(fis);
            users=(Hashtable<String,String>)is.readObject();
            is.close();
            fis.close();
        } 
        catch (FileNotFoundException e){}
        catch(IOException e){}
        catch(ClassNotFoundException e){}
        
        int result = JOptionPane.showConfirmDialog(null, myPanel, 
           "Введіть логін та пароль", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) 
        {
            if(oldPassField.getText() == null ? users.get(loginField.getText()) == null : oldPassField.getText().equals(users.get(loginField.getText())) || adminRights)
            {
                if((loginField.getText() == null ? currentUser == null : loginField.getText().equals(currentUser)) || adminRights)
                {
                    users.replace(loginField.getText(), newPassField.getText());
                    try 
                    {
                        FileOutputStream fos;
                        fos=new FileOutputStream("users");
                        ObjectOutputStream oos = new ObjectOutputStream(fos);
                        oos.writeObject(users);
                        oos.close();
                        fos.close();
                    } 
                    catch (FileNotFoundException a) {}
                    catch(IOException a){}                
                }
                else
                {
                    UIManager.put("OptionPane.okButtonText","OK");
                    JOptionPane.showMessageDialog(null, "Відмовлено");
                    return;
                }
            }
            else JOptionPane.showMessageDialog(null, "Невірні дані користувача!");
        }                
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        UIManager.put("OptionPane.okButtonText","Видалити");
        UIManager.put("OptionPane.cancelButtonText","Відмінити");
        
        JTextField loginField = new JTextField(15);
        JPasswordField passField = new JPasswordField(15);
        JPanel myPanel = new JPanel();
        
        JPanel labels = new JPanel(new GridLayout(0,1,2,10));
        JPanel inputs = new JPanel(new GridLayout(0,1,2,2));
        
        labels.add(new JLabel("Логін:",SwingConstants.RIGHT));
        labels.add(new JLabel("Пароль:",SwingConstants.RIGHT));
        myPanel.add(labels, BorderLayout.WEST);

        
        inputs.add(loginField);
        inputs.add(passField);
        myPanel.add(inputs,BorderLayout.CENTER);
        
        
        Map<String,String> users=new Hashtable<>();
        try 
        {
            FileInputStream fis = new FileInputStream("users");
            ObjectInputStream is = new ObjectInputStream(fis);
            users=(Hashtable<String,String>)is.readObject();
            is.close();
            fis.close();
        } 
        catch (FileNotFoundException e){}
        catch(IOException e){}
        catch(ClassNotFoundException e){}
        
        int result = JOptionPane.showConfirmDialog(null, myPanel, 
           "Введіть логін та пароль", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) 
        {
            if("admin".equals(loginField.getText()) || (!loginField.getText().equals(currentUser) && !adminRights))
            {
                UIManager.put("OptionPane.okButtonText","OK");
                JOptionPane.showMessageDialog(null, "Відмовлено");
                return;
            }
            if(passField.getText() == null ? users.get(loginField.getText()) == null : passField.getText().equals(users.get(loginField.getText())))
            {
                users.remove(loginField.getText());
                try 
                {
                    FileOutputStream fos;
                    fos=new FileOutputStream("users");
                    ObjectOutputStream oos = new ObjectOutputStream(fos);
                    oos.writeObject(users);
                    oos.close();
                    fos.close();
                } 
                catch (FileNotFoundException a) {}
                catch(IOException a){}
                if(loginField.getText().equals(currentUser)) System.exit(0);
            }
            else JOptionPane.showMessageDialog(null, "Невірні дані користувача!");
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        UIManager.put("OptionPane.okButtonText","Увійти");
        UIManager.put("OptionPane.cancelButtonText","Відмінити");
        JTextField loginField = new JTextField(15);
        JPasswordField passField = new JPasswordField(15);
        

        JPanel myPanel = new JPanel();
        JPanel labels = new JPanel(new GridLayout(0,1,2,10));
        JPanel inputs = new JPanel(new GridLayout(0,1,2,2));
        
        labels.add(new JLabel("Логін:",SwingConstants.RIGHT));
        labels.add(new JLabel("Пароль:",SwingConstants.RIGHT));
        myPanel.add(labels, BorderLayout.WEST);

        
        inputs.add(loginField);
        inputs.add(passField);
        myPanel.add(inputs,BorderLayout.CENTER);
        
        boolean itr=true;
        Map<String,String> users=new Hashtable<>();
        try 
        {
            FileInputStream fis = new FileInputStream("users");
            ObjectInputStream is = new ObjectInputStream(fis);
            users=(Hashtable<String,String>)is.readObject();
            is.close();
            fis.close();
        } 
        catch (FileNotFoundException e){}
        catch(IOException e){}
        catch(ClassNotFoundException e){}
        
        String login,password;
                
        while(itr)
        {
            int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Вхід", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) 
            {
                login=loginField.getText();
                password=passField.getText();
                if(users.get(login) == null ? password == null : users.get(login).equals(password))
                {
                    itr=false;
                    currentUser=login;
                    if("admin".equals(login)) adminRights=true;
                    else adminRights=false;
                }
            }
            else
            {
                if("admin".equals(currentUser)) adminRights=true;
                break;
            }
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StartWindow frm=new StartWindow();
                frm.setTitle("Сервер");
                frm.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
